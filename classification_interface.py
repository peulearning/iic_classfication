# -*- coding: utf-8 -*-
"""Classification Interface.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O0bb1-JNKoidrK6Snbz9RoFH0nAfVvPG

## **Introdução a Inteligência Computacional**

## **Bacharleado em Sistemas de Informações**

## **Turma 121 2º / 2023**

##**IFNMG Campus Januária**

---

### *Pedro Henrique Araújo Mattos Ribeiro*

###Base do Kaggle
- [US Top 10K Artists and Their Popular Songs](https://www.kaggle.com/datasets/spoorthiuk/us-top-10k-artists-and-their-popular-songs)
"""

import pandas as pd
url='https://drive.google.com/file/d/1jyPDip6yQk3W1odQyl0WT2x2Nj19LAL8/view?usp=sharing'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
df = pd.read_csv(url)

df.info()

df.head()

df.value_counts()

df.shape

# Importando bibliotecas
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

# Carregando o DataFrame
# Substitua 'seu_dataset.csv' pelo nome do seu arquivo CSV ou caminho completo
df = pd.read_csv(url)

# Fase de Pré-processamento
# Removendo colunas desnecessárias
columns_to_drop = ['Name', 'ID', 'URI']
df = df.drop(columns=columns_to_drop, errors='ignore')

# Tratando valores ausentes (se necessário)
df = df.dropna()

# Codificando variáveis categóricas
le = LabelEncoder()
df['Gender'] = le.fit_transform(df['Gender'])
df['Country'] = le.fit_transform(df['Country'])

# Convertendo a coluna 'Genres' (exemplo - pode variar dependendo do conteúdo)
# Por exemplo, contar o número de gêneros ou criar variáveis dummy
df['NumGenres'] = df['Genres'].apply(lambda x: len(eval(x)))
df = pd.get_dummies(df, columns=['Genres'], prefix='Genre', drop_first=True)

# Divisão do Conjunto de Dados
X = df.drop('Gender', axis=1, errors='ignore')  # Features
y = df['Gender']  # Variável-alvo

# Divisão do Conjunto de Dados
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Treinamento do Modelo
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Avaliação do Modelo (exemplo)
accuracy = model.score(X_test, y_test)
print(f'Acurácia do Modelo: {accuracy}')

from sklearn.metrics import classification_report
predicoes = model.predict(X_test)
print(classification_report(y_test,predicoes))

"""## Export model"""

import pickle
with open('modelo.pkl', 'wb') as file:
    pickle.dump(model, file)

from google.colab import files
files.download('model.pkl')

"""## Import Model"""

arquivo = files.upload()

with open('model.pkl', 'rb') as f:
    model = pickle.load(f)

